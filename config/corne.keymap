#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#include "keys_de.h"

&led_strip {
        chain-length = <27>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB           &kp DE_Q  &kp DE_W  &kp DE_E  &kp DE_R  &kp DE_T     &kp DE_Z       &kp DE_U  &kp DE_I      &kp DE_O       &kp DE_P         &kp DE_U_UMLAUT
&sk LEFT_SHIFT    &kp DE_A  &kp DE_S  &kp DE_D  &kp DE_F  &kp DE_G     &kp DE_H       &kp DE_J  &kp DE_K      &kp DE_L       &kp DE_O_UMLAUT  &kp DE_A_UMLAUT
&sk LEFT_CONTROL  &kp DE_Y  &kp DE_X  &kp DE_C  &kp DE_V  &kp DE_B     &kp DE_N       &kp DE_M  &kp DE_COMMA  &kp DE_PERIOD  &kp MINUS        &kp DE_SZ
                                      &kp LGUI  &mo 1     &kp SPACE    &kp BACKSPACE  &mo 2     &kp ENTER
            >;
        };

        sym_num {
            bindings = <
&none  &none  &kp DE_DOUBLE_QUOTES  &kp DE_LPAR  &kp DE_RPAR  &kp DE_EQUAL    &kp KP_DIVIDE    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &none
&none  &none  &kp DE_SINGLE_QUOTE   &kp DE_LBKT  &kp DE_RBKT  &kp DE_QMARK    &kp KP_ASTERISK  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &none
&none  &none  &kp DE_LT             &kp DE_LBRC  &kp DE_RBRC  &kp DE_EXCL     &none            &kp KP_N1  &kp KP_N2  &kp KP_N3  &none         &none
                                    &none        &none        &kp DELETE      &none            &none      &none
            >;
        };

        control {
            bindings = <
&rgb_ug RGB_TOG    &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI    &trans    &trans  &trans    &trans     &trans  &trans
&ext_power EP_TOG  &out OUT_TOG     &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD    &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT  &trans  &trans
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &trans    &trans  &trans    &trans     &trans  &trans
                                                     &trans           &trans           &trans             &trans    &trans  &trans
            >;
        };
    };
};

